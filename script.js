//////////////////////////////////////////////////////////////////////////
//1 Напишите функцию printWithDelay,
// которая принимает в качестве аргумента массив строк.
// Функция должна выводить каждую строку из массива
// на консоль с задержкой в 1 секунду между каждой строкой.
//
// function printWithDelay(params) {
//   for (let i = 0; i < params.length; i++) {
//     setTimeout(() => {
//       console.log(params[i]);
//     }, i * 1000);
//   }
// }
// printWithDelay(["a", "b", "c", "d"]);
/////////////////////////////////////////////////////////////////
// 2)Напишите функцию getSquares, которая принимает в
// качестве аргумента массив чисел.
// Функция должна использовать метод map для возведения в
// квадрат каждого числа в массиве и возвращать новый массив,
// содержащий возведенные в квадрат числа.
//
// function getSquares(numeres) {
//   const squares = numeres.map((element) => {
//     return element ** 2;
//   });
//   console.log(squares);
// }
//getSquares([2, 3, 4, 5, 6, 8, 9]);
//////////////////////////////////////////////////////////////////
// 3)Напишите функцию sumEvenSquares, которая принимает в
// качестве аргумента массив чисел. Функция должна использовать
// методы map и filter  и вернуть сумму оставшихся четных чисел
//
// function sumEvenSquares(numeres) {
//   const newNumeres = numeres.filter((element) => element % 2 === 0);
//   console.log(newNumeres);
//   const sum = newNumeres.reduce((acc, current) => acc + current);
//   console.log(sum);
// }
// sumEvenSquares([3, 6, 7, 8, 5, 7, 4, 9]);
///////////////////////////////////////////////////////////////////
// 4)Напишите функцию с именем delayedUpperCase,
// которая принимает в качестве аргумента массив строк.
// Функция должна использовать метод forEach для перебора каждой
// строки в массиве и выводить на консоль версию строки в верхнем
// регистре с задержкой в 2 секунды.
//
// function delayedUpperCase(cuts) {
//   cuts.forEach((element, index) => {
//     setTimeout(() => {
//       console.log(element.toUpperCase());
//     }, index * 2000);
//   });
// }
//delayedUpperCase(["col", "trop", "ziz", "gor"]);
////////////////////////////////////////////////////////////////////
// 5)Напишите функцию countDown, принимающую в качестве
// аргумента число. Функция должна использовать метод setTimeout
// для печати чисел от заданного числа до 1,
// с задержкой в 1 секунду между каждым числом.
// function countDown(number) {
//   for (let i = 0; i < number; i++) {
//     setTimeout(() => {
//       console.log(number - i);
//     }, i * 1000);
//   }
// }
// countDown(8);
////////////////////////////////////////////////////////////////////
// 6)Напишите функцию filterNamesByLetter,
// которая принимает в качестве аргументов массив имен и букву.
// Функция должна использовать метод filter, чтобы вернуть новый
// массив, содержащий только те имена из исходного массива,
// которые начинаются с заданной буквы.
//
// const filterNamesByLetter = (names, letter) =>
//   names.filter((name) => name.startsWith(letter));
//
// console.log(filterNamesByLetter(["hty", "wik", "aof"], "w"));
